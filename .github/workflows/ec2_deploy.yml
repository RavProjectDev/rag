name: Deploy to EC2
on:
  push:
    branches: [main]

env:
  DOCKER_IMAGE: ravprojectdev/rag
  CONTAINER_NAME: rag_container

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        no-cache: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:latest
          ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        platforms: linux/amd64

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          set -e
          
          # Clean up old images and containers
          echo "Cleaning up old containers and images..."
          docker stop ${{ env.CONTAINER_NAME }} 2>/dev/null || true
          docker rm ${{ env.CONTAINER_NAME }} 2>/dev/null || true
          docker system prune -af --volumes
          
          # Pull the latest image (force pull)
          echo "Pulling latest Docker image..."
          docker pull ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          
          # Prepare Google Cloud credentials
          echo "Setting up Google Cloud credentials..."
          echo "${{ secrets.GCLOUD_KEY_JSON_B64 }}" | base64 -d > /tmp/gcloud-key.json
          chmod 600 /tmp/gcloud-key.json
          
          # Run the new container
          echo "Starting new container..."
          docker run -d \
            --name ${{ env.CONTAINER_NAME }} \
            --restart unless-stopped \
            -v /tmp/gcloud-key.json:/rag/credentials/gcloud-key.json:ro \
            -p 8000:8000 \
            -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
            -e SBERT_API_URL="${{ secrets.SBERT_API_URL }}" \
            -e MONGODB_URI="${{ secrets.MONGODB_URI }}" \
            -e MONGODB_DB_NAME="${{ secrets.MONGODB_DB_NAME }}" \
            -e MONGODB_VECTOR_COLLECTION="${{ secrets.MONGODB_VECTOR_COLLECTION }}" \
            -e GEMINI_API_KEY="${{ secrets.GEMINI_API_KEY }}" \
            -e GOOGLE_CLOUD_PROJECT_ID="${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}" \
            -e VERTEX_REGION="${{ secrets.VERTEX_REGION }}" \
            -e GOOGLE_APPLICATION_CREDENTIALS="/rag/credentials/gcloud-key.json" \
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          
          # Verify deployment
          echo "Verifying deployment..."
          sleep 5
          if docker ps | grep -q ${{ env.CONTAINER_NAME }}; then
            echo "‚úÖ Container is running successfully"
            docker logs --tail 10 ${{ env.CONTAINER_NAME }}
          else
            echo "‚ùå Container failed to start"
            docker logs ${{ env.CONTAINER_NAME }}
            exit 1
          fi
        
          echo "üöÄ Deployment completed successfully!"
